open ListApis_t

let output = ref "generated"

let finally f g =
  try
    let result = f () in
    g ();
    result
  with e ->
    g ();
    raise e

let with_output_channel filename f =
  let oc = open_out (Filename.concat !output filename) in
  finally (fun () -> f oc) (fun () -> close_out oc)

let ocaml_keywords = [
  "and"; "as"; "assert"; "asr"; "begin"; "class"; "constraint"; "do";
  "done"; "downto"; "else"; "end"; "exception"; "external"; "false";
  "for"; "fun"; "function"; "functor"; "if"; "in"; "include"; "inherit";
  "initializer"; "land"; "lazy"; "let"; "lor"; "lsl"; "lsr"; "lxor";
  "match"; "method"; "mod"; "module"; "mutable"; "new"; "object"; "of";
  "open"; "or"; "private"; "rec"; "sig"; "struct"; "then"; "to"; "true";
  "try"; "type"; "val"; "virtual"; "when"; "while"; "with"
]

let ocaml_escape x = if List.mem x ocaml_keywords then "_" ^ x else x

let name_of_param p = ocaml_escape p.name

let ocaml_module = function
| "" -> ""
| x ->
   let x' = String.copy x in
   x'.[0] <- Char.uppercase x.[0];
   x'

let autogenerated_banner write =
  write "(* THIS FILE IS AUTOGENERATED FROM THE CLOUDSTACK API - DO NOT EDIT *)\n";
  write "\n";
  write "(* ... I really mean it. Your changes will be lost. *)";
  write "\n"

let string_of_file filename =
  let ic = open_in filename in
  let output = Buffer.create 1024 in
  try
    while true do
      let block = String.make 4096 '\000' in
      let n = input ic block 0 (String.length block) in
      if n = 0 then raise End_of_file;
      Buffer.add_substring output block 0 n
    done;
    "" (* never happens *)
  with End_of_file ->
    close_in ic;
    Buffer.contents output
